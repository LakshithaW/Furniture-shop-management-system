/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface_Sales;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import mycode.DBconnect;
import net.proteanit.sql.DbUtils;


public class SpecialFurniture extends javax.swing.JFrame {
    
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    /**
     * Creates new form SpecialFurniture
     */
    public SpecialFurniture() {
        initComponents();
        
        con = DBconnect.connect();
        
         fillcombo();
         tableload();
         
         btn_Update.setEnabled(false);
         btn_Delete.setEnabled(false);
    }
    
    
     public boolean validator()
    {
        
        
        if (cmbProduct.getSelectedItem().toString().equals("product"))
        {
            JOptionPane.showMessageDialog(null,"Select the Product");
            return false;
        }
        
        if (cmbModel.getSelectedItem().toString().equals("model"))
        {
            JOptionPane.showMessageDialog(null,"Select the Model");
            return false;
        }
        
         if (cbox_ProductID.getSelectedItem().toString().equals("furnitureID"))
        {
            JOptionPane.showMessageDialog(null,"Select the Product ID");
            return false;
        }
         if (txt_AddCost.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Additional Cost Field is Empty ");
            return false;
        }
         if(lbl_TC.getText().equals(""))
         {
             JOptionPane.showMessageDialog(null,"Please calculate cost for a one furniture!");
            return false;
         }
         if(lbl_FTC.getText().equals(""))
         {
             JOptionPane.showMessageDialog(null,"Please calculate the total price!");
            return false;
         }
         if (txt_Qty.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Quantity Field is Empty ");
            return false;
        }
        return true;
        }
     public boolean validator2()
    {
        if (txt_AddCost.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Additional Cost Field is Empty ");
            return false;
        }
        
        if (cmbProduct.getSelectedItem().toString().equals("product"))
        {
            JOptionPane.showMessageDialog(null,"Select the Product");
            return false;
        }
        
        if (cmbModel.getSelectedItem().toString().equals("model"))
        {
            JOptionPane.showMessageDialog(null,"Select the Model");
            return false;
        }
        
         if (cbox_ProductID.getSelectedItem().toString().equals("furnitureID"))
        {
            JOptionPane.showMessageDialog(null,"Select the Product ID");
            return false;
        }
        return true;
    }
     
    public void fillcombo()
    {
        try
        {
            String sql = "select distinct product from furniture";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while(rs.next())
            {
                cmbProduct.addItem(rs.getString("product"));
            }
        }
        catch(Exception e)
        {
        
        }
    }
    
    public void reset()
    {
        btn_Add.setEnabled(true);
        btn_Update.setEnabled(false);
        btn_Delete.setEnabled(false);
        
        lbl_RN.setText("");
        txt_AddCost.setText("");
        lbl_TC.setText("");
        txt_Qty.setText("");
        lbl_FTC.setText("");
    }
    
    public void tableload()
    {
        try
        {
                String sql = "select receiptNo,product,model,productID,cost,addCost,price,quantity,totalPrice from specialsale";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            
            tblSpecial.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            System.out.println(e);
            System.out.println("table load");
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_SpecialFurniture = new javax.swing.JLabel();
        lbl_Recipt = new javax.swing.JLabel();
        lbl_product = new javax.swing.JLabel();
        lbl_productMdl = new javax.swing.JLabel();
        lbl_PrdctID = new javax.swing.JLabel();
        cbox_ProductID = new javax.swing.JComboBox();
        lbl_RN = new javax.swing.JLabel();
        lbl_Cost = new javax.swing.JLabel();
        lbl_Qty = new javax.swing.JLabel();
        txt_Qty = new javax.swing.JTextField();
        lbl_C = new javax.swing.JLabel();
        lbl_AdditionalCost = new javax.swing.JLabel();
        lbl_OneFurnitureCost = new javax.swing.JLabel();
        lbl_TC = new javax.swing.JLabel();
        txt_AddCost = new javax.swing.JTextField();
        lbl_TotalCost = new javax.swing.JLabel();
        lbl_FTC = new javax.swing.JLabel();
        btn_Back = new javax.swing.JButton();
        btn_CalcCost = new javax.swing.JButton();
        btn_totalCost = new javax.swing.JButton();
        btn_Add = new javax.swing.JButton();
        btn_Update = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSpecial = new javax.swing.JTable();
        btnReset = new javax.swing.JButton();
        cmbModel = new javax.swing.JComboBox();
        cmbProduct = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Special Furniture Sales");

        lbl_SpecialFurniture.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbl_SpecialFurniture.setText("Special Furniture Sales");

        lbl_Recipt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_Recipt.setText("Receipt No       :");

        lbl_product.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_product.setText("Product           :");

        lbl_productMdl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_productMdl.setText("Model             : ");

        lbl_PrdctID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_PrdctID.setText("Product ID      :");

        cbox_ProductID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbox_ProductID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1000", "1001", "1002", "1003", " " }));
        cbox_ProductID.setToolTipText("");
        cbox_ProductID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbox_ProductIDItemStateChanged(evt);
            }
        });

        lbl_RN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lbl_Cost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_Cost.setText("Price               :");

        lbl_Qty.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_Qty.setText("Quantity : ");

        txt_Qty.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_Qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_QtyActionPerformed(evt);
            }
        });
        txt_Qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_QtyKeyReleased(evt);
            }
        });

        lbl_C.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_C.setText("20000");

        lbl_AdditionalCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_AdditionalCost.setText("Additional Cost : ");

        lbl_OneFurnitureCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_OneFurnitureCost.setText("One furniture :");
        lbl_OneFurnitureCost.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                lbl_OneFurnitureCostComponentAdded(evt);
            }
        });

        lbl_TC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_AddCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_AddCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_AddCostKeyReleased(evt);
            }
        });

        lbl_TotalCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_TotalCost.setText("Total Cost : ");

        lbl_FTC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btn_Back.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Back.setText("Back");
        btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BackActionPerformed(evt);
            }
        });

        btn_CalcCost.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_CalcCost.setText("Calculate Cost");
        btn_CalcCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CalcCostActionPerformed(evt);
            }
        });

        btn_totalCost.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_totalCost.setText("Total Cost");
        btn_totalCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_totalCostActionPerformed(evt);
            }
        });

        btn_Add.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Add.setText("Add");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        btn_Update.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Update.setText("Update");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });

        btn_Delete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Delete.setText("Delete");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });

        tblSpecial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSpecial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSpecialMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSpecial);

        btnReset.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        cmbModel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbModelItemStateChanged(evt);
            }
        });

        cmbProduct.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProductItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Rs.");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Rs.");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Rs.");

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Receipt No");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Recipt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lbl_SpecialFurniture))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(jButton1))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lbl_product, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(cmbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(lbl_productMdl, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(cmbModel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lbl_PrdctID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(cbox_ProductID, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(lbl_Cost, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(lbl_C, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lbl_AdditionalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(txt_AddCost, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(btn_CalcCost, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(400, 400, 400)
                .addComponent(lbl_OneFurnitureCost)
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lbl_TC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lbl_Qty, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(txt_Qty, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(btn_totalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(400, 400, 400)
                .addComponent(lbl_TotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(lbl_FTC, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(btn_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(btn_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_Back)
                        .addGap(29, 29, 29)
                        .addComponent(lbl_Recipt))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_SpecialFurniture)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_product)
                    .addComponent(cmbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_productMdl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_PrdctID)
                    .addComponent(cbox_ProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Cost, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(lbl_C))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_CalcCost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_OneFurnitureCost)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_TC)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_AddCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_AdditionalCost))))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_totalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lbl_Qty)))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_TotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_FTC, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txt_Qty, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Add)
                    .addComponent(btn_Delete)
                    .addComponent(btn_Update)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_QtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_QtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_QtyActionPerformed

    private void lbl_OneFurnitureCostComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_lbl_OneFurnitureCostComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_OneFurnitureCostComponentAdded

    private void btn_CalcCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CalcCostActionPerformed
       
        //validator2();
        
        String price = lbl_C.getText();
        String addcost = txt_AddCost.getText();

        if(!addcost.isEmpty())
        {
            Double cost = Double.parseDouble(addcost)+ Double.parseDouble(price);
            String f = cost.toString();
            lbl_TC.setText(f);
        }
        else 
        {
            JOptionPane.showMessageDialog(null, "Please enter the additional cost!");
        }
        


// TODO add your handling code here:
    }//GEN-LAST:event_btn_CalcCostActionPerformed

    private void btn_totalCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_totalCostActionPerformed

        
        //validator();
        String price = lbl_TC.getText();
        String qty = txt_Qty.getText();

        if(!qty.isEmpty())
        {
            Double cost = Integer.parseInt(qty)* Double.parseDouble(price);
            String m = cost.toString();
            lbl_FTC.setText(m);
        }
        else 
        {
            JOptionPane.showMessageDialog(null, "Please enter the quantity!");
        }


// TODO add your handling code here:
    }//GEN-LAST:event_btn_totalCostActionPerformed

    private void txt_AddCostKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_AddCostKeyReleased
     String x =txt_AddCost.getText();
         
        for(int i =0; i<x.length(); i++){
        
        char c = x.charAt(i);
        
        if(Character.isDigit(c))
        {
            
        }
        else if(Character.isLetter(c))
        {
            JOptionPane.showMessageDialog(null, "This field cannot have letters", "Error",0);
            txt_AddCost.setText(" ");
 
            break;
        }
        }
        
// TODO add your handling code here:
    }//GEN-LAST:event_txt_AddCostKeyReleased

    private void txt_QtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_QtyKeyReleased

        String x =txt_Qty.getText();
         
        for(int i =0; i<x.length(); i++){
        
        char c = x.charAt(i);
        
        if(Character.isDigit(c))
        {
            
        }
        else if(Character.isLetter(c))
        {
            JOptionPane.showMessageDialog(null, "This field cannot have letters", "Error",0);
            txt_Qty.setText(" ");
 
            break;
        }
        }


    }//GEN-LAST:event_txt_QtyKeyReleased

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
       
        int d = JOptionPane.showConfirmDialog(null, "Do you really want to Delete");
        
        if(d==0)
        {
            String rn = lbl_RN.getText();
            String[] x = rn.split("P");
            String no = x[1];
            try
            {
                String sql = "DELETE from specialsale where receiptNo = '"+ no +"' ";
                pst = con.prepareStatement(sql);
                pst.execute();
                
                tableload();
                reset();
            }
            catch (Exception e)
            {
                System.out.println(e);
                System.out.println("Delete");
            }
        }
        



// TODO add your handling code here:
    }//GEN-LAST:event_btn_DeleteActionPerformed

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        
        boolean check = validator();
      
        if (check == true)
        {
            String product = cmbProduct.getSelectedItem().toString();
            String model = cmbModel.getSelectedItem().toString();
            String id = cbox_ProductID.getSelectedItem().toString();
            String price = lbl_C.getText();
            String addCost = txt_AddCost.getText();
            String cost = lbl_TC.getText();
            String quantity = txt_Qty.getText();
            String totalPrice = lbl_FTC.getText();
        
        try 
        {
              String q = "INSERT INTO specialsale (product,model,productID,price,addCost,cost,quantity,totalPrice) values ('"+ product +"', '"+ model +"', '"+ id +"', '"+price+"' , '"+ addCost +"', '"+ cost +"', '"+ quantity +"','"+ totalPrice +"')";
              pst = con.prepareStatement(q);
              pst.execute();
                      
              tableload();
              reset();
        } 
          catch (Exception e) 
          {
              System.out.println(e);
              System.out.println("Insert");
          }
        }
        
    }//GEN-LAST:event_btn_AddActionPerformed

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed

        if(!txt_AddCost.getText().equals(""))
        {
            int x = JOptionPane.showConfirmDialog(null, "Do you really want to update");
        
            if (x == 0)
            {
           
                String rn = lbl_RN.getText();
                String[] n = rn.split("P");
                String no = n[1];
            
                String product = cmbProduct.getSelectedItem().toString();
                String model = cmbModel.getSelectedItem().toString();
                String id = cbox_ProductID.getSelectedItem().toString();
                String price = lbl_C.getText();
                String addCost = txt_AddCost.getText();
                String cost = lbl_TC.getText();
                String quantity = txt_Qty.getText();
                String totalPrice = lbl_FTC.getText();
        
                try 
                {
                    String sql = " UPDATE specialsale SET product = '"+ product +"' , model = '"+ model +"', productID = '"+ id +"', price = '"+ price +"', addCost = '"+ addCost +"' , cost = '"+ cost +"', quantity = '"+ quantity +"' , totalPrice = '"+ totalPrice +"' WHERE receiptNo = '"+ no +"'";
                    pst = con.prepareStatement(sql);
                    pst.execute(); 
                    
                    tableload();
                    reset();
                } 
                catch (Exception e) 
                {
                    System.out.println(e);
                    System.out.println("Update");
                }
            }
        }


// TODO add your handling code here:
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void cbox_ProductIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbox_ProductIDItemStateChanged
        
//        String product = cmbProduct.getSelectedItem().toString();
//        String model = cmbModel.getSelectedItem().toString();
//        
//        String sql = "select sellingPrice from furniturecost where product = '"+ product +"' AND model = '"+ model +"' ";
//        try
//        {
//            pst = con.prepareStatement(sql);
//            rs = pst.executeQuery();
//            
//            while(rs.next())
//            {
//                lbl_C.setText(rs.getString("sellingPrice"));
//            }
//        }
//        catch(Exception e)
//        {
//            System.out.println(e);
//            System.out.println("price");
//        }
    }//GEN-LAST:event_cbox_ProductIDItemStateChanged

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void cmbModelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbModelItemStateChanged
        
//        String product = cmbProduct.getSelectedItem().toString();
//        String model = cmbModel.getSelectedItem().toString();
//        
//        String sql = "select distinct furnitureID from specialfurniture where product = '"+ product +"' AND model = '"+ model +"' ";
//        try
//        {
//            ps = con.prepareStatement(sql);
//            rs = ps.executeQuery();
//            
//            while(rs.next())
//            {
//                cbox_ProductID.addItem(rs.getString("furnitureID"));
//            }
//        }
//        catch(Exception e)
//        {
//            System.out.println(e);
//            System.out.println("ID");
//        }
    }//GEN-LAST:event_cmbModelItemStateChanged

    private void cmbProductItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProductItemStateChanged
        
        String s = cmbProduct.getSelectedItem().toString();
        
        try
        {
            String sql = "SELECT model FROM furniture WHERE product = '"+ s +"'";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            cmbModel.removeAllItems();
            while(rs.next())
            {
                cmbModel.addItem(rs.getString("model"));
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_cmbProductItemStateChanged

    private void btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BackActionPerformed
        
        mainCustomers x = new mainCustomers();
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_BackActionPerformed

    private void tblSpecialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSpecialMouseClicked
        
        btn_Add.setEnabled(false);
        btn_Update.setEnabled(true);
        btn_Delete.setEnabled(true);
        
        int r = tblSpecial.getSelectedRow();
        
        String no  = tblSpecial.getValueAt(r, 0).toString();
        String product = tblSpecial.getValueAt(r, 1).toString();
        String model = tblSpecial.getValueAt(r, 2).toString();
        String id = tblSpecial.getValueAt(r, 3).toString();
        String cost = tblSpecial.getValueAt(r, 4).toString();
        String addCost = tblSpecial.getValueAt(r, 5).toString();
        String price = tblSpecial.getValueAt(r, 6).toString();
        String qty = tblSpecial.getValueAt(r, 7).toString();
        String tprice = tblSpecial.getValueAt(r, 8).toString();

        lbl_RN.setText("SP"+no);
        cmbProduct.setSelectedItem(product);
        cmbModel.setSelectedItem(model);
        cbox_ProductID.setSelectedItem(id);
        lbl_TC.setText(cost);
        txt_AddCost.setText(addCost);
        lbl_TC.setText(price);
        txt_Qty.setText(qty);
        lbl_FTC.setText(tprice);
        
    }//GEN-LAST:event_tblSpecialMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if(txtSearch.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter Receipt No");
        }
        else
        {
            
        try
        {
            String search = txtSearch.getText();
            String sql = "select * from specialsale where receiptNo LIKE '%"+ search +"%' ";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            tblSpecial.setModel(DbUtils.resultSetToTableModel(rs));
        }
            catch(Exception e)
            {

            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpecialFurniture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpecialFurniture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpecialFurniture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpecialFurniture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpecialFurniture().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Back;
    private javax.swing.JButton btn_CalcCost;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_Update;
    private javax.swing.JButton btn_totalCost;
    private javax.swing.JComboBox cbox_ProductID;
    private javax.swing.JComboBox cmbModel;
    private javax.swing.JComboBox cmbProduct;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_AdditionalCost;
    private javax.swing.JLabel lbl_C;
    private javax.swing.JLabel lbl_Cost;
    private javax.swing.JLabel lbl_FTC;
    private javax.swing.JLabel lbl_OneFurnitureCost;
    private javax.swing.JLabel lbl_PrdctID;
    private javax.swing.JLabel lbl_Qty;
    private javax.swing.JLabel lbl_RN;
    private javax.swing.JLabel lbl_Recipt;
    private javax.swing.JLabel lbl_SpecialFurniture;
    private javax.swing.JLabel lbl_TC;
    private javax.swing.JLabel lbl_TotalCost;
    private javax.swing.JLabel lbl_product;
    private javax.swing.JLabel lbl_productMdl;
    private javax.swing.JTable tblSpecial;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txt_AddCost;
    private javax.swing.JTextField txt_Qty;
    // End of variables declaration//GEN-END:variables
}
